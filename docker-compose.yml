version: '2'

services:
  # ######## ZooKeeper to manage Kafka brokers ###########
  zookeeper:
    image: wurstmeister/zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    networks:
      - pipeline_network

  # ######## Kafka ###########
  kafka:
    image: wurstmeister/kafka:latest
    container_name: kafka
    ports:
      - '9092:9092'
      - '9090:9090'
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      HOSTNAME_COMMAND: "route -n | awk '/UG[ \t]/{print $$2}'"
      KAFKA_LISTENERS: INSIDE://:9090,OUTSIDE://:9092
      KAFKA_ADVERTISED_LISTENERS: INSIDE://:9090,OUTSIDE://_{HOSTNAME_COMMAND}:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_CREATE_TOPICS: 
        "raw_events:1:1,\
         processed_events:1:1"
    depends_on:
      - zookeeper
    networks:
      - pipeline_network

  # ######## Kafka UI, Mentor brokers & topics #########
  kafdrop:
    image: 'obsidiandynamics/kafdrop:latest'
    container_name: kafdrop
    restart: "no"
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka:9090"
      JVM_OPTS: "-Xms16M -Xmx48M -Xss180K -XX:-TieredCompilation -XX:+UseStringDeduplication -noverify"
    depends_on:
      - kafka
    networks:
      - pipeline_network

  # ############# Redis, in-memory key-valye storage ############
  redis:
    image: 'bitnami/redis:latest'
    container_name: redis
    ports:
      - "6379:6379"
    environment:
      ALLOW_EMPTY_PASSWORD: 'yes'
    networks:
      - pipeline_network


networks:
  pipeline_network:
    driver: bridge